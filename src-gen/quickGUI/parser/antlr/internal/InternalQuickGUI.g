/*
 * generated by Xtext 2.17.0
 */
grammar InternalQuickGUI;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package quickGUI.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package quickGUI.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import quickGUI.services.QuickGUIGrammarAccess;

}

@parser::members {

 	private QuickGUIGrammarAccess grammarAccess;

    public InternalQuickGUIParser(TokenStream input, QuickGUIGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "GUI";
   	}

   	@Override
   	protected QuickGUIGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGUI
entryRuleGUI returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGUIRule()); }
	iv_ruleGUI=ruleGUI
	{ $current=$iv_ruleGUI.current; }
	EOF;

// Rule GUI
ruleGUI returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_title_0_0=RULE_STRING
				{
					newLeafNode(lv_title_0_0, grammarAccess.getGUIAccess().getTitleSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGUIRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getGUIAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGUIAccess().getLayoutLayoutParserRuleCall_1_1_0());
					}
					lv_layout_2_0=ruleLayout
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGUIRule());
						}
						set(
							$current,
							"layout",
							lv_layout_2_0,
							"quickGUI.QuickGUI.Layout");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getGUIAccess().getRightParenthesisKeyword_1_2());
			}
		)+
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getButtonParserRuleCall_0());
		}
		this_Button_0=ruleButton
		{
			$current = $this_Button_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getTextBoxParserRuleCall_1());
		}
		this_TextBox_1=ruleTextBox
		{
			$current = $this_TextBox_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLayout
entryRuleLayout returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayoutRule()); }
	iv_ruleLayout=ruleLayout
	{ $current=$iv_ruleLayout.current; }
	EOF;

// Rule Layout
ruleLayout returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLayoutAccess().getHorizontalParserRuleCall_0_0());
			}
			this_Horizontal_0=ruleHorizontal
			{
				$current = $this_Horizontal_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getLayoutAccess().getVerticalParserRuleCall_0_1());
			}
			this_Vertical_1=ruleVertical
			{
				$current = $this_Vertical_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getLayoutAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLayoutAccess().getElementsElementParserRuleCall_2_0());
				}
				lv_elements_3_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayoutRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"quickGUI.QuickGUI.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getLayoutAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleHorizontal
entryRuleHorizontal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHorizontalRule()); }
	iv_ruleHorizontal=ruleHorizontal
	{ $current=$iv_ruleHorizontal.current; }
	EOF;

// Rule Horizontal
ruleHorizontal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHorizontalAccess().getHorizontalAction_0(),
					$current);
			}
		)
		(
			otherlv_1='h'
			{
				newLeafNode(otherlv_1, grammarAccess.getHorizontalAccess().getHKeyword_1_0());
			}
			    |
			otherlv_2='horizontal'
			{
				newLeafNode(otherlv_2, grammarAccess.getHorizontalAccess().getHorizontalKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleVertical
entryRuleVertical returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerticalRule()); }
	iv_ruleVertical=ruleVertical
	{ $current=$iv_ruleVertical.current; }
	EOF;

// Rule Vertical
ruleVertical returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVerticalAccess().getVerticalAction_0(),
					$current);
			}
		)
		(
			otherlv_1='v'
			{
				newLeafNode(otherlv_1, grammarAccess.getVerticalAccess().getVKeyword_1_0());
			}
			    |
			otherlv_2='vertical'
			{
				newLeafNode(otherlv_2, grammarAccess.getVerticalAccess().getVerticalKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getButtonRule()); }
	iv_ruleButton=ruleButton
	{ $current=$iv_ruleButton.current; }
	EOF;

// Rule Button
ruleButton returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getButtonAccess().getButtonAction_0(),
					$current);
			}
		)
		(
			otherlv_1='btn'
			{
				newLeafNode(otherlv_1, grammarAccess.getButtonAccess().getBtnKeyword_1_0());
			}
			    |
			otherlv_2='button'
			{
				newLeafNode(otherlv_2, grammarAccess.getButtonAccess().getButtonKeyword_1_1());
			}
		)
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getButtonAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getButtonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTextBox
entryRuleTextBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextBoxRule()); }
	iv_ruleTextBox=ruleTextBox
	{ $current=$iv_ruleTextBox.current; }
	EOF;

// Rule TextBox
ruleTextBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTextBoxAccess().getTextBoxAction_0(),
					$current);
			}
		)
		(
			otherlv_1='tb'
			{
				newLeafNode(otherlv_1, grammarAccess.getTextBoxAccess().getTbKeyword_1_0());
			}
			    |
			otherlv_2='textbox'
			{
				newLeafNode(otherlv_2, grammarAccess.getTextBoxAccess().getTextboxKeyword_1_1());
			}
		)
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getTextBoxAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextBoxRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
